
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."ROLE" AS ENUM (
    'Admin',
    'Editor',
    'Viewer'
);

ALTER TYPE "public"."ROLE" OWNER TO "postgres";

CREATE TYPE "public"."role_enum" AS ENUM (
    'ADMIN',
    'EDITOR',
    'NONE',
    'VIEWER'
);

ALTER TYPE "public"."role_enum" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."board" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" character varying NOT NULL,
    "shareable_link" character varying,
    "archived" boolean DEFAULT false,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "admin_id" "uuid" DEFAULT "auth"."uid"()
);

ALTER TABLE "public"."board" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."board_roles" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "sharee_id" "uuid" DEFAULT "auth"."uid"(),
    "board_id" "uuid",
    "role" "public"."role_enum"
);

ALTER TABLE "public"."board_roles" OWNER TO "postgres";

ALTER TABLE "public"."board_roles" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."board_roles_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."board_share" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "board_id" "uuid",
    "admin_id" "uuid" DEFAULT "auth"."uid"(),
    "sharee_id" "uuid" DEFAULT "auth"."uid"()
);

ALTER TABLE "public"."board_share" OWNER TO "postgres";

ALTER TABLE "public"."board_share" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."board_share_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."ideas" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "board_id" "uuid",
    "name" character varying NOT NULL,
    "description" "text",
    "updated_at" timestamp with time zone DEFAULT "now"()
);

ALTER TABLE "public"."ideas" OWNER TO "postgres";

ALTER TABLE "public"."ideas" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."ideas_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."board"
    ADD CONSTRAINT "board_name_key" UNIQUE ("name");

ALTER TABLE ONLY "public"."board"
    ADD CONSTRAINT "board_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."board_roles"
    ADD CONSTRAINT "board_roles_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."board_share"
    ADD CONSTRAINT "board_share_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."ideas"
    ADD CONSTRAINT "ideas_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."board_roles"
    ADD CONSTRAINT "board_roles_board_id_fkey" FOREIGN KEY ("board_id") REFERENCES "public"."board"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."board_share"
    ADD CONSTRAINT "board_share_board_id_fkey" FOREIGN KEY ("board_id") REFERENCES "public"."board"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."ideas"
    ADD CONSTRAINT "ideas_board_id_fkey" FOREIGN KEY ("board_id") REFERENCES "public"."board"("id");

ALTER TABLE "public"."board" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."board_roles" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."board_share" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."ideas" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."board" TO "anon";
GRANT ALL ON TABLE "public"."board" TO "authenticated";
GRANT ALL ON TABLE "public"."board" TO "service_role";

GRANT ALL ON TABLE "public"."board_roles" TO "anon";
GRANT ALL ON TABLE "public"."board_roles" TO "authenticated";
GRANT ALL ON TABLE "public"."board_roles" TO "service_role";

GRANT ALL ON SEQUENCE "public"."board_roles_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."board_roles_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."board_roles_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."board_share" TO "anon";
GRANT ALL ON TABLE "public"."board_share" TO "authenticated";
GRANT ALL ON TABLE "public"."board_share" TO "service_role";

GRANT ALL ON SEQUENCE "public"."board_share_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."board_share_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."board_share_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."ideas" TO "anon";
GRANT ALL ON TABLE "public"."ideas" TO "authenticated";
GRANT ALL ON TABLE "public"."ideas" TO "service_role";

GRANT ALL ON SEQUENCE "public"."ideas_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."ideas_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."ideas_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
